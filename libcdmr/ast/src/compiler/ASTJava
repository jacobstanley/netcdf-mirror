/*
* Copyright (c) 1998 - 2010. University Corporation for Atmospheric Research/Unidata
 * Portions of this software were developed by the Unidata Program at the
 * University Corporation for Atmospheric Research.
 *
 * Access and use of this software shall impose the following obligations
 * and understandings on the user. The user is granted the right, without
 * any fee or cost, to use, copy, modify, alter, enhance and distribute
 * this software, and any derivative works thereof, and its supporting
 * documentation for any purpose whatsoever, provided that this entire
 * notice appears in all copies of the software, derivative works and
 * supporting documentation.  Further, UCAR requests that the user credit
 * UCAR/Unidata in any publications that result from the use of this
 * software or in any product that includes this software. The names UCAR
 * and/or Unidata, however, may not be used in any advertising or publicity
 * to endorse or promote any products or commercial entity unless specific
 * written permission is obtained from UCAR/Unidata. The user also
 * understands that UCAR/Unidata is not obligated to provide the user with
 * any support, consulting, training or assistance of any kind with regard
 * to the use, operation and performance of this software nor to provide
 * the user with any updates, revisions, new versions or "bug fixes."
 *
 * THIS SOFTWARE IS PROVIDED BY UCAR/UNIDATA "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL UCAR/UNIDATA BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE ACCESS, USE OR PERFORMANCE OF THIS SOFTWARE.
 */

package unidata.protobuf.compiler;

abstract public class ASTJava extends AST
{

    public ASTJava(Sort sort) {super(sort);}


static public abstract class Type extends ASTJava
{
    public Type(Sort sort) {super(sort);}
}

static public class Root extends ASTJava
{
    public Root(String name) {super(name);}
}

static public class File extends ASTJava
{
    public File(String name) {super(name);}
}

static public class Package extends ASTJava
{
    public Package(String name) {super(name);}
}

static public class Enum extends Type
{
    public Enum(String name) {super(name);}
}

static public class EnumValue extends ASTJava
{
    public EnumValue(String name, int value) {super(name,value);}
}

static public class Extend extends ASTJava
{
    public Extend(String name, String msgname) {super(name,msgname);}
}

static public class Range extends AST.Range
{
    public Range(int start, int stop) {super(start,stop);}
}

static public class Extensions extends ASTJava
{
    public Extensions(String name) {super(name);}
}

static public class Field extends ASTJava
{
    public Field(String name, Cardinality cardinality, String fieldtype, int id)
    {
	super(name,cardinality,fieldtype,id);
    }
}

static public class Group extends ASTJava.Field
{
    public Group(String name, Cardinality cardinality, int id)
    {
	super(name,cardinality,null,id);
    }
}

static public class Message extends Type
{
    public Message(String name) {super(name);}
}

static public class Option extends ASTJava
{
    public Option(String name, String value) {super(name,value);}
}

static public class Rpc extends ASTJava
{
    public Rpc(String name, String argtype, String returntype)
    {
	super(name,argtype,returntype);
    }
}

static public class Service extends ASTJava
{
    public Service(String name) {super(name);}
}

static public class PrimitiveType extends Type
{
    public PrimitiveType(PrimitiveSort PrimitiveSort) {super(PrimitiveSort);}
}

}
